{"version":3,"sources":["ErrorBoundary.jsx","StatLine.jsx","Diamond.jsx","resultText.js","JenkinsLog.jsx","RightPanel.jsx","System.jsx","fetchWithTimeout.js","App.jsx","debounce.js","serviceWorker.js","index.js"],"names":["ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","console","warn","react_default","a","createElement","className","children","React","Component","StatLine","services","undefined","style","backgroundColor","shapeFillColor","servers","title","react_with_separator_default","separator","Diamond","jenkinsClassName","buildResult","resultText","SUCCESS","FAILURE","ABORTED","JenkinsLog","formatTimeAgo","bind","assertThisInitialized","timestamp","isNaN","seconds","Math","floor","Date","interval","concat","_this2","jenkinsLogEntries","timestamps","map","job","jobsByTimestamp","build","builds","key","Diamond_Diamond","result","name","DownedService","service","server","id","serverColors","operational_status","RightPanel","downedServices","RightPanel_DownedService","ErrorBoundary_ErrorBoundary","StatLine_StatLine","serviceStats","up","serverStats","disabled","simulateDownedService","down","showLegend","src","alt","JenkinsLog_JenkinsLog","jenkinsTimestamps","jenkinsJobsByTimestamp","serviceColor","System","system","notTooLongAgo","tierIndicator","valueOf","tier","cssClass","toLowerCase","status","jenkinsBuilds","diamond","jenkinsJobs","length","buildVizClasses","debugJenkins","fetchWithTimeout","url","timeoutDuration","didTimeout","Promise","resolve","reject","timeout","setTimeout","Error","fetch","then","response","clearTimeout","catch","err","enable","disable","out-of-service-health","App","groups","timeSinceLastUpdate","networkText","hideCursor","cursorVisibilityController","fetchLoopController","checkIfServiceIsDown","getLoadBalancerStatus","getJenkinsStatus","processLoadBalancerData","processJenkinsData","handleNetworkErr","start","app","document","onmousemove","func","wait","immediate","context","args","arguments","callNow","apply","debounce","setState","networkStatus","all","_response","slicedToArray","loadBalancerData","jenkinsData","window","location","redirect","finally","fetchLoop","setInterval","tick","stop","clearInterval","frequencyToCheck","jenkinsStats","building","serversDown","threshold","parseInt","minimum_notificate_real_server","forEach","_this3","message","ok","json","callback","_this4","replaceUnderscores","string","replace","loading","data","sort","groupA","groupB","nameA","toUpperCase","nameB","group","virtual_services","toConsumableArray","_this5","jobs","unmatchedJobs","textInBrackets","_loop","pop","jobMatched","color","matches","regexResults","exec","description","push","serviceIdInJobDescription","some","phrase","arr","split","lastWord","join","parenthesizeLastWord","reverse","slice","index","App_Group","progressbarPercentage","onClick","dist_default","percentage","styles","path","stroke","strokeWidth","strokeLinecap","strokeDasharray","trail","RightPanel_RightPanel","Group","systems","System_System","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4a4fff9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { \r\n\t\t\thasError: false,\r\n\t\t};\r\n\t}\r\n\t\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\t// Update state so the next render will show the fallback UI.\r\n\t\treturn { \r\n\t\t\thasError: true,\r\n\t\t};\r\n\t}\r\n\t\r\n\tcomponentDidCatch(error, info) {\r\n\t\tconsole.warn(error);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <div className=\"error\">\r\n\t\t\t\t<h1>Error</h1>\r\n\t\t\t</div>\r\n\t\t}\r\n\t\t\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WithSeparator from 'react-with-separator';\r\n\r\nexport default class StatLine extends React.Component {\r\n\tstatic propTypes = {\r\n\t\ttitle: PropTypes.string.isRequired, // \"UP\"\r\n\t\tbackgroundColor: PropTypes.string, // hsla(115, 100%, 73.9%, 0.85);\r\n\t\tshapeFillColor: PropTypes.string.isRequired,\r\n\t\tservices: PropTypes.number,\r\n\t\tservers: PropTypes.number,\r\n\t}\r\n\trender() {\r\n\t\tvar services = this.props.services === undefined ? null : <span>\r\n\t\t\t<span className=\"half-circle\" style={{backgroundColor: this.props.shapeFillColor}} /> \r\n\t\t\t{this.props.services} services\r\n\t\t</span>\r\n\t\tvar servers = this.props.servers === undefined ? null : <span>\r\n\t\t\t<span className=\"square\" style={{backgroundColor: this.props.shapeFillColor}} /> \r\n\t\t\t{this.props.servers} servers\r\n\t\t</span>\r\n\t\treturn (<div className=\"stat-line\" style={{backgroundColor: this.props.backgroundColor }}>\r\n\t\t\t<strong>{this.props.title}: </strong>\r\n\t\t\t<WithSeparator separator=', '>\r\n\t\t\t\t{ services }\r\n\t\t\t\t{ servers }\r\n\t\t\t</WithSeparator>\r\n\t\t</div>);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/** Used in the System component and the Jenkins build log */\r\nexport default class Diamond extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tbuildResult: PropTypes.string,\r\n\t}\r\n\trender() {\r\n\t\tlet jenkinsClassName = \"diamond\";\r\n\t\tif      (this.props.buildResult === \"SUCCESS\") jenkinsClassName += \" green\";\r\n\t\telse if (this.props.buildResult === \"FAILURE\") jenkinsClassName += \" red\";\r\n\t\telse jenkinsClassName += \" grey\";\r\n\t\t\r\n\t\treturn <div className={jenkinsClassName}></div>;\r\n\t}\r\n}\r\n","const resultText = {\r\n\t\"SUCCESS\": \"succeeded\",\r\n\t\"FAILURE\": \"failed\",\r\n\t\"ABORTED\": \"aborted\",\r\n}\r\n\r\nexport { resultText };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Diamond from './Diamond';\r\nimport { resultText } from './resultText';\r\n\r\nexport default class JenkinsLog extends React.Component {\r\n\tstatic propTypes = {\r\n\t\ttimestamps: PropTypes.array.isRequired,\r\n\t\tjobsByTimestamp: PropTypes.object.isRequired,\r\n\t}\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.formatTimeAgo = this.formatTimeAgo.bind(this);\r\n\t}\r\n\tformatTimeAgo(timestamp) {\r\n\t\tif (isNaN(timestamp)) return '';\r\n\t\t\r\n\t\tvar seconds = Math.floor((new Date('Feb 27, 2019 12:19:00') - timestamp) / 1000);\r\n\t\t\r\n\t\t// days\r\n\t\tvar interval = Math.floor(seconds / 86400 );\r\n\t\tif (interval === 1) return `1 day ago`\r\n\t\tif (interval > 1) return `${interval} days ago`\r\n\t\t// hours\r\n\t\tinterval = Math.floor(seconds / 3600);\r\n\t\tif (interval === 1) return `1 hour ago`;\r\n\t\tif (interval > 1) return `${interval} hours ago`;\r\n\t\t// minutes\r\n\t\tinterval = Math.floor(seconds / 60);\r\n\t\tif (interval === 1) return `1 minute ago`;\r\n\t\tif (interval > 1) return `${interval} minutes ago`;\r\n\t\t// seconds\r\n\t\treturn `${seconds} seconds ago`;\r\n\t}\r\n\trender() {\r\n\t\tvar jenkinsLogEntries = this.props.timestamps.map(timestamp => {\r\n\t\t\tlet job = this.props.jobsByTimestamp[timestamp];\r\n\t\t\tlet build = job.builds[0];\r\n\t\t\t\r\n\t\t\treturn (<div key={timestamp} className=\"log-line\">\r\n\t\t\t\t<Diamond buildResult={build.result} />\r\n\t\t\t\t{job.name} {resultText[build.result]} {this.formatTimeAgo(timestamp)}\r\n\t\t\t</div>);\r\n\t\t})\r\n\t\treturn (\r\n\t\t\t<div className=\"jenkins-log\">\r\n\t\t\t\t<h2>Jenkins build log</h2>\r\n\t\t\t\t{ jenkinsLogEntries }\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ErrorBoundary from './ErrorBoundary';\r\nimport StatLine from './StatLine';\r\nimport JenkinsLog from './JenkinsLog';\r\n\r\nclass DownedService extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tservice: PropTypes.object.isRequired,\r\n\t\tserverColors: PropTypes.object.isRequired,\r\n\t}\r\n\trender() {\r\n\t\tvar servers = this.props.service.servers.map(server => <div className=\"server indent\" key={server.id}>\r\n\t\t\t\t<div className={\"square \" + this.props.serverColors[server.operational_status]}></div>\r\n\t\t\t\t<div className=\"server-name\">{server.id}</div>\r\n\t\t</div>)\r\n\t\treturn <div className=\"downed-service\">\r\n\t\t\t<div className=\"red circle\"></div>\r\n\t\t\t<div className=\"downed-service-name\">{this.props.service.id}</div>\r\n\t\t\t<div>\r\n\t\t\t\t{servers}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t}\r\n}\r\n\r\nexport default class RightPanel extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tserverColors: PropTypes.object.isRequired,\r\n\t\tserviceStats: PropTypes.shape({\r\n\t\t\tup: PropTypes.number,\r\n\t\t\tdown: PropTypes.number,\r\n\t\t}).isRequired,\r\n\t\tserverStats: PropTypes.shape({\r\n\t\t\tup: PropTypes.number,\r\n\t\t\tdown: PropTypes.number,\r\n\t\t\tdisabled: PropTypes.number,\r\n\t\t}).isRequired,\r\n\t\tdownedServices: PropTypes.array.isRequired,\r\n\t\tsimulateDownedService: PropTypes.bool,\r\n\t\tshowLegend: PropTypes.bool,\r\n\t\tjenkinsTimestamps: PropTypes.array.isRequired,\r\n\t\tjenkinsJobsByTimestamp: PropTypes.object.isRequired,\r\n\t}\r\n\t// constructor(props) {\r\n\t// \tsuper(props);\r\n\t// }\r\n\t\r\n\trender() {\r\n\t\tvar downedServices = this.props.downedServices.map(service => <DownedService service={service} key={service.id} serverColors={this.props.serverColors} />);\r\n\t\treturn (<div className=\"right-panel\">\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<StatLine title=\"UP\" backgroundColor=\"hsla(115, 100%, 73.9%, 0.85)\" shapeFillColor=\"lime\" services={this.props.serviceStats.up} servers={this.props.serverStats.up} />\r\n\t\t\t\t<StatLine title=\"DISABLED\" backgroundColor=\"hsla(0, 0%, 75%, 0.85)\" shapeFillColor=\"gray\" servers={this.props.serverStats.disabled} />\r\n\t\t\t\t<div className=\"downed\">\r\n\t\t\t\t\t{this.props.simulateDownedService && <center><strong>**SIMULATED**<br/></strong></center>}\r\n\t\t\t\t\t<StatLine title=\"DOWN\" shapeFillColor=\"red\" services={this.props.serviceStats.down} servers={this.props.serverStats.down} />\r\n\t\t\t\t\t<div className=\"downed-services\">\r\n\t\t\t\t\t\t{downedServices}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t{ this.props.showLegend && \r\n\t\t\t\t<div className=\"legend\">\r\n\t\t\t\t\t<h2>Legend</h2>\r\n\t\t\t\t\t<img src=\"/legend.svg\" alt=\"legend\" />\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<JenkinsLog timestamps={this.props.jenkinsTimestamps} jobsByTimestamp={this.props.jenkinsJobsByTimestamp} />\r\n\t\t\t</ErrorBoundary>\r\n\r\n\t\t</div>)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Diamond from './Diamond';\r\n\r\nconst serviceColor = {\r\n\tup: \"green\",\r\n\tdown: \"red\",\r\n}\r\n/** Visualizes a service (site) which is kept live by one or more servers. Member of a Group. */\r\nexport default class System extends Component {\r\n\tstatic propTypes = {\r\n\t\tsystem: PropTypes.shape({\r\n\t\t\tservers: PropTypes.arrayOf(PropTypes.shape({\r\n\t\t\t\tid: PropTypes.any.isRequired,\r\n\t\t\t\toperational_status: PropTypes.string.isRequired,\r\n\t\t\t})).isRequired,\r\n\t\t\tid: PropTypes.string.isRequired,\r\n\t\t\tstatus: PropTypes.string, // should be present, but not on first render\r\n\t\t\tjenkinsJobs: PropTypes.arrayOf(PropTypes.shape({\r\n\t\t\t\tbuilds: PropTypes.arrayOf(PropTypes.shape({\r\n\t\t\t\t\tresult: PropTypes.string,\r\n\t\t\t\t\ttimestamp: PropTypes.number.isRequired\r\n\t\t\t\t})).isRequired,\r\n\t\t\t})), // jenkinsJobs are not required\r\n\t\t}).isRequired,\r\n\t\tdebugJenkins: PropTypes.bool, // not required\r\n\t\tserverColors: PropTypes.shape({\r\n\t\t\tenable: PropTypes.string.isRequired,\r\n\t\t\tdisable: PropTypes.string.isRequired,\r\n\t\t}).isRequired,\r\n\t}\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tservers: this.props.system.servers,\r\n\t\t}\r\n\t\tthis.formatTimeAgo = this.formatTimeAgo.bind(this);\r\n\t\tthis.notTooLongAgo = this.notTooLongAgo.bind(this);\r\n\t\tthis.tierIndicator = this.tierIndicator.bind(this);\r\n\t}\r\n\tformatTimeAgo(timestamp) {\r\n\t\tif (isNaN(timestamp)) return '';\r\n\t\t\r\n\t\tvar seconds = Math.floor((new Date('Feb 27, 2019 12:19:00') - timestamp) / 1000);\r\n\t\t\r\n\t\t// hours\r\n\t\tvar interval = Math.floor(seconds / 3600);\r\n\t\tif (interval > 0) return `${interval}h`;\r\n\t\t// minutes\r\n\t\tinterval = Math.floor(seconds / 60);\r\n\t\tif (interval > 0) return `${interval}m`;\r\n\t\t// seconds\r\n\t\treturn `${seconds}s`;\r\n\t}\r\n\tnotTooLongAgo(timestamp) {\r\n\t\tvar now = new Date('Feb 27, 2019 12:19:00');\r\n\t\tvar currentTimestamp = now.valueOf();\r\n\t\tconst eightHours = 1000 * 60 * 60 * 8;\r\n\t\treturn (currentTimestamp - timestamp) < eightHours;\r\n\t}\r\n\ttierIndicator() {\r\n\t\tvar tier = this.props.system.tier;\r\n\t\tvar cssClass = \"tier-\"+tier.toLowerCase() + ' ' + serviceColor[this.props.system.status];\r\n\t\treturn tier ? <div className={cssClass} title={this.props.system.id}></div> : <div></div>;\r\n\t}\r\n\trender() {\r\n\t\tvar servers = this.props.system.servers.map(server => (\r\n\t\t\t<div \r\n\t\t\t\tclassName={ \"rect \" + this.props.serverColors[server.operational_status]}\r\n\t\t\t\tserver={server}\r\n\t\t\t\tkey={server.id}\r\n\t\t\t\ttitle={server.id}\r\n\t\t\t></div>\r\n\t\t));\r\n\t\t\r\n\t\tvar jenkinsBuilds = [];\r\n\t\tvar diamond = null;\r\n\t\tif (\r\n\t\t\tthis.props.system.jenkinsJobs && \r\n\t\t\tthis.props.system.jenkinsJobs.length && \r\n\t\t\tthis.props.system.jenkinsJobs[0].builds &&\r\n\t\t\tthis.props.system.jenkinsJobs[0].builds.length\r\n\t\t) {\r\n\t\t\tdiamond = <Diamond buildResult={this.props.system.jenkinsJobs[0].builds[0].result} />\r\n\t\t\t\r\n\t\t\tjenkinsBuilds = this.props.system.jenkinsJobs.map(job => {\r\n\t\t\t\tvar buildVizClasses = \"build-viz\";\r\n\t\t\t\tif (job.builds[0].result === \"SUCCESS\") buildVizClasses += \" green-text\";\r\n\t\t\t\tif (job.builds[0].result === \"FAILURE\") buildVizClasses += \" red-text\";\r\n\t\t\t\tif (this.notTooLongAgo(job.builds[0].timestamp) || this.props.debugJenkins) {\r\n\t\t\t\t\treturn (<div className={buildVizClasses} key={job.name} title={\"Jenkins job: \" + job.name}>\r\n\t\t\t\t\t\t{this.formatTimeAgo(job.builds[0].timestamp)}\r\n\t\t\t\t\t</div>);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className={this.props.system.status === \"down\" ? \"downed system\" : \"system\"}>\r\n\t\t\t\t<div className={\"circle-outline-\" + serviceColor[this.props.system.status]}>\r\n\t\t\t\t\t{this.tierIndicator()}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"rects\">\r\n\t\t\t\t\t{servers}\r\n\t\t\t\t</div>\r\n\t\t\t\t{diamond}\r\n\t\t\t\t<div className=\"builds\">\r\n\t\t\t\t\t{jenkinsBuilds}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","// adapted from https://davidwalsh.name/fetch-timeout\r\n\r\nexport default function fetchWithTimeout(url, timeoutDuration) {\r\n\tvar didTimeout = false;\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\tconst timeout = setTimeout(function() {\r\n\t\t\tdidTimeout = true;\r\n\t\t\treject(new Error(`Request to ${url} timed out`));\r\n\t\t}, timeoutDuration);\r\n\t\t\r\n\t\tfetch(url)\r\n\t\t\t.then(function(response) {\r\n\t\t\t\tclearTimeout(timeout);\r\n\t\t\t\tif (!didTimeout) {\r\n\t\t\t\t\tresolve(response);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(function(err) {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t\t\r\n\t\t\t\t// Rejection already happened with setTimeout\r\n\t\t\t\tif (didTimeout) return;\r\n\t\t\t\t// Reject with error\r\n\t\t\t\treject(err);\r\n\t\t\t})\r\n\t\t;\r\n\t}).catch(function(err) {\r\n\t\tconsole.error(err);\r\n\t})\r\n}\r\n","import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport CircularProgressbar from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport './App.scss';\r\nimport RightPanel from './RightPanel';\r\nimport ErrorBoundary from './ErrorBoundary';\r\nimport System from './System';\r\nimport dumpLoadBalancer from './export';\r\nimport fetchWithTimeout from './fetchWithTimeout';\r\nimport { resultText } from './resultText';\r\nimport debounce from './debounce';\r\n\r\nconst loadBalancerUrl = \"/sites-monitor/load-balancer.json\";\r\nconst jenkinsUrl = \"/sites-monitor/jenkins.json\";\r\n\r\nconst simulateDownedService = true;\r\nconst updateFrequency = 15; // seconds to wait between data refreshes\r\nconst updateFrequencyWhenDown = 5; // seconds to wait between data refreshes\r\nconst numJenkinsBuildsToShow = 15;\r\nconst debugJenkins = false;\r\nconst exportData = false;\r\nconst serverColors = {\r\n\t\"enable\": \"green\",\r\n\t\"disable\": \"grey\",\r\n\t\"out-of-service-health\": \"red\"\r\n}\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tgroups: [],\r\n\t\t\tserviceStats: {\r\n\t\t\t\tup: 0,\r\n\t\t\t\tdown: 0,\r\n\t\t\t},\r\n\t\t\tserverStats: {\r\n\t\t\t\tup: 0,\r\n\t\t\t\tdisabled: 0,\r\n\t\t\t\tdown: 0,\r\n\t\t\t},\r\n\t\t\tdownedServices: [],\r\n\t\t\ttimeSinceLastUpdate: 0,\r\n\t\t\tnetworkText: \"Loading...\",\r\n\t\t\tjobsByTimestamp: {},\r\n\t\t\ttimestamps: [],\r\n\t\t\tshowLegend: true,\r\n\t\t\thideCursor: false,\r\n\t\t};\r\n\t\tthis.cursorVisibilityController = this.cursorVisibilityController.bind(this);\r\n\t\tthis.fetchLoopController = this.fetchLoopController.bind(this);\r\n\t\tthis.checkIfServiceIsDown = this.checkIfServiceIsDown.bind(this);\r\n\t\tthis.getLoadBalancerStatus = this.getLoadBalancerStatus.bind(this);\r\n\t\tthis.getJenkinsStatus = this.getJenkinsStatus.bind(this);\r\n\t\tthis.processLoadBalancerData = this.processLoadBalancerData.bind(this);\r\n\t\tthis.processJenkinsData = this.processJenkinsData.bind(this);\r\n\t\tthis.handleNetworkErr = this.handleNetworkErr.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchLoopController().start();\r\n\t\tthis.cursorVisibilityController();\r\n\t}\r\n\tcursorVisibilityController() {\r\n\t\tvar timeout;\r\n\t\tvar app = this;\r\n\t\tfunction restartTimer() {\r\n\t\t\tapp.setState({ hideCursor: false });\r\n\t\t\tclearTimeout(timeout);\r\n\t\t\ttimeout = setTimeout(() => {\r\n\t\t\t\tapp.setState({ hideCursor: true });\r\n\t\t\t}, 5000);\r\n\t\t}\r\n\t\tdocument.onmousemove = debounce(restartTimer, 500, true);\r\n\t}\r\n\tfetchLoopController() {\r\n\t\tconst start = () => {\r\n\t\t\tthis.setState({ networkStatus: \"loading\" });\r\n\t\t\tPromise.all([ this.getLoadBalancerStatus(), this.getJenkinsStatus() ]).then((response) => {\r\n\t\t\t\tconst [ loadBalancerData, jenkinsData ] = response;\r\n\t\t\t\tif (exportData) console.log(dumpLoadBalancer(loadBalancerData));\r\n\t\t\t\tif (loadBalancerData.error === 'error') {\r\n\t\t\t\t\twindow.location = loadBalancerData.redirect;\r\n\t\t\t\t} else if (jenkinsData.error === 'error') {\r\n\t\t\t\t\twindow.location = jenkinsData.redirect;\r\n\t\t\t\t}\r\n\t\t\t\tthis.processLoadBalancerData(loadBalancerData, () => {\r\n\t\t\t\t\tthis.processJenkinsData(jenkinsData);\r\n\t\t\t\t});\r\n\t\t\t}, (error) => { \r\n\t\t\t\tthis.handleNetworkErr(error);\r\n\t\t\t}).finally(() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tfetchLoop: setInterval(tick, 1000),\r\n\t\t\t\t\ttimeSinceLastUpdate: 0,\r\n\t\t\t\t\tnetworkStatus: \"waiting\",\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t\tconst stop = () => {\r\n\t\t\tclearInterval(this.state.fetchLoop);\r\n\t\t\tthis.setState({\r\n\t\t\t\ttimeSinceLastUpdate: 0,\r\n\t\t\t\tnetworkStatus: \"stopped\"\r\n\t\t\t});\r\n\t\t}\r\n\t\tconst tick = () => {\r\n\t\t\tthis.setState({ frequencyToCheck: updateFrequency });\r\n\t\t\tif ( \r\n\t\t\t\t(this.state.serverStats != null && this.state.serviceStats != null && this.state.jenkinsStats != null)\r\n\t\t\t\t&& (this.state.serverStats.down > 0 || this.state.serviceStats.down > 0 || this.state.jenkinsStats.building > 0) \r\n\t\t\t) {\r\n\t\t\t\tthis.setState({ frequencyToCheck: updateFrequencyWhenDown });\r\n\t\t\t}\r\n\t\t\tif (this.state.timeSinceLastUpdate > this.state.frequencyToCheck - 1) {\r\n\t\t\t\tstop();\r\n\t\t\t\tstart();\r\n\t\t\t\tthis.setState({ showLegend: false });\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ timeSinceLastUpdate: this.state.timeSinceLastUpdate + 1 });\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { start, stop }\r\n\t}\r\n\tcheckIfServiceIsDown(service) {\r\n\t\tlet serversDown = 0;\r\n\t\tlet threshold = parseInt(service.minimum_notificate_real_server);\r\n\t\tservice.servers.forEach(server => {\r\n\t\t\tif (server.operational_status === 'out-of-service-health') serversDown += 1;\r\n\t\t});\r\n\t\treturn serversDown > 0 && serversDown >= threshold;\r\n\t}\r\n\tgetLoadBalancerStatus() {\r\n\t\treturn fetchWithTimeout(loadBalancerUrl, 15000)\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response === undefined) {\r\n\t\t\t\t\tthis.handleNetworkErr({ message: \"Load Balancer is not responding\"});\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else if (response.ok) {\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.handleNetworkErr(response);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.handleNetworkErr(err);\r\n\t\t\t})\r\n\t\t;\r\n\t}\r\n\tprocessLoadBalancerData(json, callback) {\r\n\t\tif (!json) return false;\r\n\t\t\r\n\t\tconst replaceUnderscores = string => string.replace(/_/g, ' ');\r\n\t\tthis.setState({ loading: true });\r\n\r\n\t\tvar groups = json.data;\r\n\t\tgroups.sort((groupA, groupB) => {\r\n\t\t\tvar nameA = groupA.id.toUpperCase();\r\n\t\t\tvar nameB = groupB.id.toUpperCase();\r\n\t\t\tif (nameA < nameB) return -1;\r\n\t\t\tif (nameA > nameB) return 1;\r\n\t\t\treturn 0;\r\n\t\t});\r\n\t\tgroups.forEach(group => {\r\n\t\t\tgroup.id = replaceUnderscores(group.id);\r\n\t\t\tgroup.virtual_services.forEach(service => {\r\n\t\t\t\tservice.id = replaceUnderscores(service.id);\r\n\t\t\t});\r\n\t\t});\r\n\t\tif (debugJenkins) console.log(groups);\r\n\t\tthis.setState({groups: groups});\r\n\r\n\t\tvar serviceStats = {\r\n\t\t\tup: 0,\r\n\t\t\tdown: 0,\r\n\t\t}\r\n\t\tvar serverStats = {\r\n\t\t\tup: 0,\r\n\t\t\tdisabled: 0,\r\n\t\t\tdown: 0,\r\n\t\t}\r\n\t\tthis.setState({ downedServices: [] });\r\n\t\tif (simulateDownedService) groups[10].virtual_services[3].servers[0].operational_status = \"out-of-service-health\";\r\n\t\tgroups.forEach(group => {\r\n\t\t\tgroup.virtual_services.forEach(service => {\r\n\t\t\t\tif (this.checkIfServiceIsDown(service)) {\r\n\t\t\t\t\tservice.status = \"down\";\r\n\t\t\t\t\tserviceStats.down += 1;\r\n\t\t\t\t\tthis.setState({ downedServices: [...this.state.downedServices, service] });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tservice.status = \"up\";\r\n\t\t\t\t\tserviceStats.up += 1;\r\n\t\t\t\t}\r\n\t\t\t\tservice.jenkinsJobs = [];\r\n\t\t\t\tservice.servers.forEach(server => {\r\n\t\t\t\t\tif (server.operational_status === \"enable\") { serverStats.up += 1; } \r\n\t\t\t\t\telse if (server.operational_status === \"disable\") { serverStats.disabled += 1; }\r\n\t\t\t\t\telse if (server.operational_status === \"out-of-service-health\") { serverStats.down += 1; }\r\n\t\t\t\t\telse { console.warn(\"Unexpected server status\", server.operational_status); }\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t\t\t\r\n\t\tthis.setState({ serviceStats: serviceStats, serverStats: serverStats }, callback);\r\n\t}\r\n\tgetJenkinsStatus() {\r\n\t\treturn fetchWithTimeout(jenkinsUrl, 10000)\r\n\t\t.then(response => {\r\n\t\t\tif (response === undefined) {\r\n\t\t\t\tthis.handleNetworkErr({ message: \"Jenkins server is not responding\"});\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (response.ok) {\r\n\t\t\t\treturn response.json();\r\n\t\t\t} else {\r\n\t\t\t\tthis.handleNetworkErr(response);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tprocessJenkinsData(jobs) {\r\n\t\tconst parenthesizeLastWord = phrase => { // put parens around the last word in a phrase\r\n\t\t\tlet arr = phrase.split(' ');\r\n\t\t\tlet lastWord = arr.pop();\r\n\t\t\tarr.push(`(${lastWord})`);\r\n\t\t\treturn arr.join(' ');\r\n\t\t}\r\n\r\n\t\tvar jenkinsStats = {\r\n\t\t\tup: 0,\r\n\t\t\tdown: 0,\r\n\t\t\tbuilding: 0\r\n\t\t}\r\n\t\t// match jobs from Jenkins with services from Load Balancer\r\n\t\tthis.setState(function(state) {\r\n\t\t\tconst groups = state.groups;\r\n\t\t\tconst unmatchedJobs = [];\r\n\t\t\tconst textInBrackets = /\\[(.+?)\\]/g;\r\n\t\t\tlet jobsMatched = 0;\r\n\t\t\tstate.timestamps = [];\r\n\t\t\twhile (jobs.length > 0) {\r\n\t\t\t\tconst job = jobs.pop();\r\n\t\t\t\tlet jobMatched = false;\r\n\t\t\t\tif (job.color === \"disabled\") continue;\r\n\t\t\t\tgroups.forEach(group => { // eslint-disable-line\r\n\t\t\t\t\tgroup.virtual_services.forEach(service => {\r\n\t\t\t\t\t\tlet matches;\r\n\t\t\t\t\t\tconst regexResults = [];\r\n\t\t\t\t\t\twhile (matches = textInBrackets.exec(job.description)) { // eslint-disable-line\r\n\t\t\t\t\t\t\tregexResults.push(matches[1]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst serviceIdInJobDescription = regexResults && regexResults.some(result => result === service.id);\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tjob.name === service.id || \r\n\t\t\t\t\t\t\tjob.name === parenthesizeLastWord(service.id) || \r\n\t\t\t\t\t\t\tjob.name === service.id.replace('UAT', 'Staging') ||\r\n\t\t\t\t\t\t\tjob.name === service.id.replace('UAT', '(Staging)') || \r\n\t\t\t\t\t\t\tserviceIdInJobDescription \r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t// console.log(\"Matched service\", service.id, \"with job\", job.name);\r\n\t\t\t\t\t\t\tservice.jenkinsJobs.push(job);\r\n\t\t\t\t\t\t\tjobMatched = true;\r\n\t\t\t\t\t\t\tif (debugJenkins) { jobsMatched += 1; }\r\n\t\t\t\t\t\t\tif (job.builds.length > 0 ) {\r\n\t\t\t\t\t\t\t\tswitch (resultText[job.builds[0].result]) {\r\n\t\t\t\t\t\t\t\t\tcase 'succeeded': jenkinsStats.up += 1;   break;\r\n\t\t\t\t\t\t\t\t\tcase 'failed':    jenkinsStats.down += 1; break;\r\n\t\t\t\t\t\t\t\t\tcase 'aborted':                           break;\r\n\t\t\t\t\t\t\t\t\tdefault: jenkinsStats.building += 1;      break; // A result of null means the job is building. Default is the only way to test for null in a switch.\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tif (!jobMatched) {\r\n\t\t\t\t\tunmatchedJobs.push(job);\r\n\t\t\t\t}\r\n\t\t\t\tif (job.builds.length) {\r\n\t\t\t\t\tlet timestamp = job.builds[0].timestamp;\r\n\t\t\t\t\tstate.timestamps.push(timestamp);\r\n\t\t\t\t\tstate.jobsByTimestamp[timestamp] = job;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (debugJenkins) {\r\n\t\t\t\tconsole.log(\"Matched\", jobsMatched, \"Jenkins jobs with Load Balancer services\");\r\n\t\t\t\tconsole.log(\"Unmatched jobs:\", unmatchedJobs.map(job => job.name));\r\n\t\t\t}\r\n\t\t\tstate.timestamps.sort();\r\n\t\t\tstate.timestamps.reverse();\r\n\t\t\tstate.timestamps = state.timestamps.slice(0, numJenkinsBuildsToShow);\r\n\t\t\t\r\n\t\t\tstate.jenkinsStats = jenkinsStats;\r\n\t\t\t\r\n\t\t});\t\t\r\n\t}\r\n\thandleNetworkErr(err) {\r\n\t\tthis.setState({\r\n\t\t\tnetworkText: err.message,\r\n\t\t\tgroups: [],\r\n\t\t});\r\n\t\treturn err;\r\n\t}\r\n\trender() {\r\n\t\tvar groups = this.state.groups.map((group, index) => { return <Group key={index} group={group} /> });\r\n\t\tif (groups.length === 0) {\r\n\t\t\tgroups = <div className=\"network-text\">{this.state.networkText}</div>\r\n\t\t}\r\n\t\tvar progressbarPercentage = this.state.timeSinceLastUpdate * 100/this.state.frequencyToCheck;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div id=\"App\" className={this.state.hideCursor ? \"hide-cursor\" : \"\"}>\r\n\t\t\t\t<div className=\"monitor\">\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<ul className=\"groups\">\r\n\t\t\t\t\t\t\t{groups}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<div id=\"network-status\" className={this.state.networkStatus} onClick={this.fetchLoopController().stop}>\r\n\t\t\t\t\t\t\t<CircularProgressbar percentage={progressbarPercentage} styles={{\r\n\t\t\t\t\t\t\t\tpath: { \r\n\t\t\t\t\t\t\t\t\tstroke: 'lime',\r\n\t\t\t\t\t\t\t\t\tstrokeWidth: '.05em',\r\n\t\t\t\t\t\t\t\t\tstrokeLinecap: 'butt',\r\n\t\t\t\t\t\t\t\t\tstrokeDasharray: '4'\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\ttrail: {\r\n\t\t\t\t\t\t\t\t\tstroke: 'hsl(0, 0%, 10%)',\r\n\t\t\t\t\t\t\t\t\tstrokeWidth: '0.05em',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</div>\r\n\t\t\t\t<RightPanel\r\n\t\t\t\t\tserverColors={serverColors}\r\n\t\t\t\t\tserviceStats={this.state.serviceStats}\r\n\t\t\t\t\tserverStats={this.state.serverStats}\r\n\t\t\t\t\tdownedServices={this.state.downedServices}\r\n\t\t\t\t\tsimulateDownedService={simulateDownedService}\r\n\t\t\t\t\tshowLegend={this.state.showLegend}\r\n\t\t\t\t\tjenkinsTimestamps={this.state.timestamps}\r\n\t\t\t\t\tjenkinsJobsByTimestamp={this.state.jobsByTimestamp}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst Group = props => {\r\n\tvar systems = props.group.virtual_services.map(system => <System key={system.name} system={system} debugJenkins={debugJenkins} serverColors={serverColors} />);\r\n\treturn systems.length > 0 ?\r\n\t\t(\r\n\t\t\t<li className=\"group\">\r\n\t\t\t\t{props.group.id}\r\n\t\t\t\t{systems}\r\n\t\t\t</li>\r\n\t\t) :\r\n\t\t( <div/> )\r\n};\r\n\r\nexport default App;\r\n","// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing. From underscore.js.\r\nexport default function debounce(func, wait, immediate) {\r\n\tvar timeout;\r\n\treturn function() {\r\n\t\tvar context = this, args = arguments;\r\n\t\tvar later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tvar callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t};\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}